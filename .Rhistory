limb(xa,sa,xmin,ya,x)*(1-ja)+ja*((1-jb)+jb*limb(xb,sb,xmax,yb,x))
}
}
selectivity <- doubleNormal(c(500,1100,120,80,0.01,0.1))
plot(seq(0,2000,1),selectivity(seq(0,2000,1)),type="l",xlab="Length",ylab="Selectivity")
ps <- selectivity(df.pop$length)
df.catch <- df.pop[sample(nrow(df.pop),10000,prob=ps),]
plot(length~age,data=df.catch,pch=20,col=grey(0.5,0.05))
as <- 0:maxAge
ageErr <- matrix(0,length(as),length(as),dimnames=list(as,as))
ageErr[col(ageErr)==row(ageErr)+1] <- 0.1
ageErr[col(ageErr)==row(ageErr)-1] <- 0.1
diag(ageErr) <- 1-rowSums(ageErr)
ageErr[1:5,1:5]
n <- 3
breaks <- seq(200,2000,10)
ks <- unlist(lapply(split(1:nrow(df.catch),cut(df.catch$length,c(0,breaks,Inf)),drop=TRUE),
function(ks) sample(ks,pmin(n,length(ks)))))
df.sample <- df.catch[ks,]
## The true age
df.sample$age0 <- df.sample$age
for(a in as) {
ks <- a==floor(df.sample$age0)
df.sample$age[ks] <- sample(as,sum(ks),replace=TRUE,prob=ageErr[a+1,])
}
df.sample$ageOffset <- mean(season)
nrow(df.sample)
selectedProp <- function(S,P,breaks) {
s <- .bincode(S,c(0,breaks,Inf))
p <- .bincode(P,c(0,breaks,Inf))
(tabulate(s,nbin=length(breaks)+1)/pmax(1,tabulate(p,nbin=length(breaks)+1)))
}
frac <- selectedProp(df.sample$length,df.catch$length,breaks=breaks)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
warnings()
debug(lsVB)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1)
)
i <- 1
w <- Aerr[Age[i]-Amin+1,]
w
sub <- which(w>0)
sub
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
mu
L <- 200
-sum(w[sub]*adjustedLik(L,mu,coef[4]))
L
mu
cv <- coef[4]
Lbreaks <- c(0,Lbreaks,Inf)
b <- .bincode(L,Lbreaks)
b
Sbin*Fbin
outer(c(0,Lbreaks,Inf),as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu))
dim(outer(c(0,Lbreaks,Inf),as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))
length(Sbin)
Lbreaks
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
N
dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
fit$fitted
df.sample$length
plot(df.sample$length,fit$fitted)
debug(lsVB)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
i <- 1
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
optimize(function(L) -sum(w[sub]*adjustedLik(L,mu,coef[4])),range(Length))$minimum
L <- 310
-sum(w[sub]*adjustedLik(L,mu,coef[4]))
L <- 311
-sum(w[sub]*adjustedLik(L,mu,coef[4]))
L <- 309
-sum(w[sub]*adjustedLik(L,mu,coef[4]))
optimize(function(L) -sum(w[sub]*adjustedLik(L,mu,coef[4])),c(309,311))$minimum
mu
adjustedLik(L,mu,coef[4])
adjustedLik(310,mu,coef[4])
adjustedLik(311,mu,coef[4])
aux$EBlen[1]
mu
adjustedLik(311,mu,coef[4])
w
w[sub]
i
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
w <- w[sub]
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
optimize(function(L) -sum(w*adjustedLik(L,mu,coef[4])),range(Length))$minimum
i <- 2
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
w <- w[sub]
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
optimize(function(L) -sum(w*adjustedLik(L,mu,coef[4])),range(Length))$minimum
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
w <- w[sub]
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
optimize(function(L) -sum(w*adjustedLik(L,mu,coef[4])),range(Length))
mu
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
tapply(df.sample$length,df.sample$age,mean)
fit$fitted
.Machine$double.eps^0.25
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
fitted(fit)
df.sample$Age[215]
df.sample$age[215]
Lbreaks
breaks
debug(lsVB)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
i <- 1
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
w <- w[sub]
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
optimize(function(L) -sum(w*adjustedLik(L,mu,coef[4])),range(Length),tol=1.0E-6)$minimum
-sum(w*adjustedLik(L,mu,coef[4]))
-sum(w*adjustedLik(310,mu,coef[4]))
-sum(w*adjustedLik(310.001,mu,coef[4]))
-sum(w*adjustedLik(310.001,mu,coef[4]))
Lbreaks
sapply(Lbreaks,function(L) -sum(w*adjustedLik(L,mu,coef[4])))
lik <- sapply(Lbreaks,function(L) -sum(w*adjustedLik(L,mu,coef[4])))
plot(lik)
which.min(lik)
lik <- sapply(Lbreaks,function(L) -sum(w*adjustedLik(L+0.001,mu,coef[4])))
lik
plot(lik,type="l")
plot(fit$fitted,df.sample$length-fit$fitted)
plot(fit$fitted,df.sample$length-fit$fitted,pch=16,cex=0.4)
adjustedLik(Length[1],310,coef[4])
optimize(function(mu) adjustedLik(Length[1],mu,coef[4]),range(Length),tol=1.0E-6)
optimize(function(mu) -adjustedLik(Length[1],mu,coef[4]),range(Length),tol=1.0E-6)
fitted[mu]
fitted
fitted[1]
i
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
w <- w[sub]
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
sum(w*adjustedLik(Length[i],mu,coef[4]))
optimize(function(mu) -adjustedLik(Length[1],mu,coef[4]),range(Length),tol=1.0E-6)
Length[1]
Fbin
fitted
plot(sort(fitted))
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
set.seed(31)
Npop <- 10000000
M <- 0.05
season <- c(0.4,0.5)
maxAge <- 65
## Draw ages and enforce old-age death
ages0 <- rexp(Npop,M)
ages0 <- ages0[ages0 < maxAge]
## Subset to the ages that could occur in the fishing season
ages <- ages0[ages0%%1 > season[1] & ages0%%1 < season[2]]
Linf <- 1600
K <- 0.07
t0 <- -1.8
cv <- 0.1
mu <- Linf*(1-exp(-K*(ages-t0)))
lens <- rnorm(length(ages),mu,0.1*mu)
df.pop <- data.frame(id=seq_along(ages),age=ages,length=lens)
## Plot a random subset
plot(length~age,data=df.pop[sample(length(ages),10000),],pch=20,col=grey(0.5,0.05))
## Double normal selectivity
doubleNormal <- function(p,xmin=0,xmax=2000,xbin=1) {
ilogit <- function(x) 1/(1+exp(-x))
join <- function(x0,x) 1/(1+exp(-20*(x-x0)/(1+abs(x-x0))))
normal <- function(mu,s,x) exp(-(x-mu)^2/(2*s^2))
limb <- function(xp,s,xr,yr,x)  yr+(1-yr)*(normal(xp,s,x)-normal(xp,s,xr))/(1-normal(xp,s,xr))
p <- as.numeric(p)
xa <- p[1]
xb <- p[2]
sa <- p[3]
sb <- p[4]
ya <- p[5]
yb <- p[6]
function(x=seq(xmin,xmax,xbin)) {
ja <- join(xa,x)
jb <- join(xb,x)
limb(xa,sa,xmin,ya,x)*(1-ja)+ja*((1-jb)+jb*limb(xb,sb,xmax,yb,x))
}
}
selectivity <- doubleNormal(c(500,1100,120,80,0.01,0.1))
plot(seq(0,2000,1),selectivity(seq(0,2000,1)),type="l",xlab="Length",ylab="Selectivity")
ps <- selectivity(df.pop$length)
df.catch <- df.pop[sample(nrow(df.pop),10000,prob=ps),]
plot(length~age,data=df.catch,pch=20,col=grey(0.5,0.05))
as <- 0:maxAge
ageErr <- matrix(0,length(as),length(as),dimnames=list(as,as))
ageErr[col(ageErr)==row(ageErr)+1] <- 0.1
ageErr[col(ageErr)==row(ageErr)-1] <- 0.1
diag(ageErr) <- 1-rowSums(ageErr)
ageErr[1:5,1:5]
n <- 3
breaks <- seq(200,2000,10)
ks <- unlist(lapply(split(1:nrow(df.catch),cut(df.catch$length,c(0,breaks,Inf)),drop=TRUE),
function(ks) sample(ks,pmin(n,length(ks)))))
df.sample <- df.catch[ks,]
## The true age
df.sample$age0 <- df.sample$age
for(a in as) {
ks <- a==floor(df.sample$age0)
df.sample$age[ks] <- sample(as,sum(ks),replace=TRUE,prob=ageErr[a+1,])
}
df.sample$ageOffset <- mean(season)
nrow(df.sample)
selectedProp <- function(S,P,breaks) {
s <- .bincode(S,c(0,breaks,Inf))
p <- .bincode(P,c(0,breaks,Inf))
(tabulate(s,nbin=length(breaks)+1)/pmax(1,tabulate(p,nbin=length(breaks)+1)))
}
frac <- selectedProp(df.sample$length,df.catch$length,breaks=breaks)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
predict(fit,1:60)
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
predict(fit,1:60)
debug(lsgm:::predict.lsgm)
predict(fit,1:60)
mu
Age
age
mu
object$growth
library(lsgm)
fit <- lsVB(df.sample$age,df.sample$length,ageErr,breaks,frac,
selectivity = selectivity,
Aoffset=df.sample$ageOffset,
start=list(Linf=1600,K=0.06,t0=-1.8,CV=0.1))
summary(fit)
predict(fit,1:60)
diagnostics(fit)
diagnostics <- function(fit) {
## Import objects from fit
coef <- fit$coefficients
CV <- coef[length(coef)]
growth <- fit$growth
selectivity <- fit$selectivity
## Import data
Age <- fit$obj$env$data$A
Length <- fit$obj$env$data$L
Aoffset <- fit$obj$env$data$Aoff
Lbreaks <- c(0,fit$obj$env$data$Lbrk,Inf)
Sbin <- fit$obj$env$data$Sbin
Fbin <- fit$obj$env$data$Fbin
Aerr <- fit$obj$env$data$Aerr
Amin <- fit$obj$env$data$Amin
## Length selectivity adjusted likelihood
adjustedLik <- function(L,mu,cv) {
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N
}
fitted <- double(length(Age))
deviance <- double(length(Age))
for(i in seq_along(Age)) {
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
w <- w[sub]
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
opt <- optimize(function(L) -sum(w*adjustedLik(L,mu,CV)),range(Length),tol=1.0E-6)
fitted[i] <- opt$minimum
lik <- sum(w*adjustedLik(Length[i],mu,CV))
opt <- optimize(function(mu) -adjustedLik(Length[i],mu,CV),range(Length),tol=1.0E-6)
deviance[i] <- 2*log(-opt$objective)-2*log(lik)
}
data.frame(age=Age,length=Length,fitted=fitted,deviance=deviance)
}
diagnostics(fit)
df <- diagnostics(fit)
head(df)
plot(length~age,data=df)
plot(length~age,data=df,pch=16,cex=0.4,col="grey")
points(fitted()~age,data=df,pch=16,cex=0.2,col="dodgerblue")
points(fitted~age,data=df,pch=16,cex=0.2,col="dodgerblue")
points(fitted~age,data=df,pch=16,cex=0.4,col="dodgerblue")
points(fitted~age,data=df,pch=16,cex=0.4,col="firebrick")
df$deviance
sqrt(df$deviance)
sort(sqrt(df$deviance))
ppoints(3)
ppoints(4)
ppoints(2*nrow(df))[-(1:nrow(df))]
pnorm(ppoints(2*nrow(df))[-(1:nrow(df))])
plot(pnorm(ppoints(2*nrow(df))[-(1:nrow(df))]),sort(sqrt(df$deviance)))
plot(qnorm(ppoints(2*nrow(df))[-(1:nrow(df))]),sort(sqrt(df$deviance)))
r <- sign(df$length-df$fitted)*sqrt(df$deviance)
plot(df$fitted,r)
abline(h=0)
plot(df$fitted,df$length-df$fitted)
points(fitted~age,data=df,pch=16,cex=0.2,col="dodgerblue")
plot(fitted~age,data=df,pch=16,cex=0.2,col="dodgerblue")
df <- df[order(df$age),]
df
df[300:400,]
df[400:480,]
debug(diagnostics)
diagnostics(fit)
which(Age==39)
i <- 408
w <- Aerr[Age[i]-Amin+1,]
sub <- which(w>0)
w <- w[sub]
mu <- growth(sub+(Amin-1)+Aoffset[i],coef)
sapply(Lbreaks,function(L) -sum(w*adjustedLik(L,mu,CV)))
plot(sapply(Lbreaks,function(L) -sum(w*adjustedLik(L,mu,CV))))
plot(sapply(sort(c(Lbreaks-0.001,Lbreaks,Lbreaks+0.001)),function(L) -sum(w*adjustedLik(L,mu,CV))))
which.min(sapply(sort(c(Lbreaks-0.001,Lbreaks,Lbreaks+0.001)),function(L) -sum(w*adjustedLik(L,mu,CV)))
)
sort(c(Lbreaks-0.001,Lbreaks,Lbreaks+0.001))[429]
.bincode(1610,Lbreaks)
Fbin[140:145]
sum(w*adjustedLik(1609.9,mu,CV)
)
sum(w*adjustedLik(1609.9,mu,CV))
sum(w*adjustedLik(1610,mu,CV))
sum(w*adjustedLik(1610.1,mu,CV))
adjustedLik(1610.1,mu,CV)
adjustedLik(1610,mu,CV)
mu
.bincode(1510,Lbreaks)
.bincode(1510,Lbreaks)
Fbin[132]
Fbin[142]
L <- 1510
cv <- CV
mu
b <- .bincode(L,Lbreaks)
b
colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]
L <- 1610
colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]
L <- 150
L <- 1510
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N
N
L <- 1610
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
w*dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
sum(w*dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N)
L <- 16010
L <- 1610
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
sum(w*dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N)
L <- 1510
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
sum(w*dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N)
b
Fbin[b]
L <- 15010
L <- 1510
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
sum(w*dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N)
selectivity(L)
Fbin[b]
dnorm(L,mu,cv*mu)
L <- 1610
b <- .bincode(L,Lbreaks)
N <- colSums(diff(outer(Lbreaks,as.vector(mu),function(L,mu) pnorm(L,mu,cv*mu)))*(Sbin*Fbin))
dim(N) <- dim(mu)
sum(w*dnorm(L,mu,cv*mu)*selectivity(L)*Fbin[b]/N)
selectivity(L)
Fbin[b]
dnorm(L,mu,cv*mu)
f <- function(x) {
g <- function(x,y) {
x+y
}
formals(g)$y <- x
g
}
g <- f(4)
g
?lm
?nls
library(lsgm)
?lsVB
library(lsgm)
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=2000))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=500))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=200))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=150))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(1/b),from=0,to=150))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1-alpha*exp(-a*(x^c)))^(1/b),from=0,to=150))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=150))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1-alpha*exp(-a*(x^c)))^(-1/b),from=0,to=150))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=150))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=60))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=1), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=0.5), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.5,c=0.5,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=1,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=1,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.5,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.1,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.01,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=0.05,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=3000,a=1,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=1,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.5,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.025,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.05,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.1,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.8,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.08,b=0.2,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.08,b=0.5,c=1,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.08,b=0.5,c=0.5,alpha=0.2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.08,b=0.5,c=0.5,alpha=0.5), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
with(list(Linf=2000,a=0.08,b=0.5,c=0.5,alpha=2), curve(Linf*(1+alpha*exp(-a*(x^c)))^(-1/b),from=0,to=100))
?usethis::use_git_ignore
?usethis::use_git_ignore("*.o")
?usethis::use_git_ignore("*.dll")
